name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Build Docker image
        run: |
          docker build -t nginx-test:latest .
          docker save nginx-test:latest > nginx-test.tar
          
      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: nginx-test.tar

  validate:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          
      - name: Load and test Docker image
        run: |
          docker load < nginx-test.tar
          docker run -d -p 80:80 --name web nginx-test:latest
          sleep 5
          
          # Test if index.html is accessible
          if curl -f http://localhost/index.html; then
            echo "Successfully validated index.html is accessible"
            curl -v http://localhost/index.html
          else
            echo "Failed to access index.html"
            docker logs web
            exit 1
          fi
          
  push:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          
      - name: Load Docker image
        run: |
          docker load < nginx-test.tar
      
      - name: Login to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}  # Changed from vars to secrets
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          
      - name: Tag and push image
        env:
          DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx  # Changed to use your username and repo name directly
        run: |
          docker tag nginx-test:latest $DOCKER_REPO:latest
          docker push $DOCKER_REPO:latest
          echo "docker_image_pushed:${DOCKER_REPO}:latest"
